(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _cmpCategoryArticleSelector = require('./components/cmpCategoryArticleSelector');

var _cmpCountrySearch = require('./components/cmpCountrySearch');

var _cmpCardSelector = require('./components/cmpCardSelector');

(0, _cmpCategoryArticleSelector.cmpCategoryArticleSelector)();
(0, _cmpCountrySearch.cmpCountrySearch)();
(0, _cmpCardSelector.cmpCardSelector)();

},{"./components/cmpCardSelector":2,"./components/cmpCategoryArticleSelector":6,"./components/cmpCountrySearch":11}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.cmpCardSelector = undefined;

var _showAllCategory = require('./cmpCardSelector/showAllCategory');

var _getUserInput = require('./cmpCardSelector/getUserInput');

var _showSelectedCategory = require('./cmpCardSelector/showSelectedCategory');

var componentCardSelector = document.querySelector("[data-component-name='cmpCardSelector']");

var cmpCardSelector = exports.cmpCardSelector = function cmpCardSelector() {

	// only fire for `cmpCardSelector`
	if (componentCardSelector) {

		var elementSelectInput = document.querySelector("[data-component-name='cmpCardSelector'] select");

		elementSelectInput.addEventListener("change", function () {
			(0, _showAllCategory.showAllCategory)();
			(0, _showSelectedCategory.showSelectedCategory)((0, _getUserInput.getUserInput)(elementSelectInput));
		});
	}
};

},{"./cmpCardSelector/getUserInput":3,"./cmpCardSelector/showAllCategory":4,"./cmpCardSelector/showSelectedCategory":5}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var getUserInput = exports.getUserInput = function getUserInput(elementSelectInput) {

	var selectedGroup;

	selectedGroup = elementSelectInput.value;
	return selectedGroup;
};

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var showAllCategory = exports.showAllCategory = function showAllCategory() {

	var elementCardsListItem = document.querySelectorAll("[data-component-name='cmpCardSelector'] ul li"),
	    elementCardsListItemCategory;

	[].forEach.call(elementCardsListItem, function (element) {
		element.style.display = "block";
	});
};

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var showSelectedCategory = exports.showSelectedCategory = function showSelectedCategory(getUserInput) {

	var elementCardsListItem = document.querySelectorAll("[data-component-name='cmpCardSelector'] ul li"),
	    elementCardsListItemCategory;

	[].forEach.call(elementCardsListItem, function (element) {

		elementCardsListItemCategory = element.getAttribute("data-category");

		if (elementCardsListItemCategory == getUserInput) {
			element.style.display = "block";
		} else {
			element.style.display = "none";
		}
	});
};

},{}],6:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.cmpCategoryArticleSelector = undefined;

var _getSelectedCategory = require('./cmpCategoryArticleSelector/getSelectedCategory');

var _getAllSelectedCategory = require('./cmpCategoryArticleSelector/getAllSelectedCategory');

var _showAllSelectedCategory = require('./cmpCategoryArticleSelector/showAllSelectedCategory');

var componentCategoryArticleSelector = document.querySelector("[data-component-name='cmpCategoryArticleSelector']");

var cmpCategoryArticleSelector = exports.cmpCategoryArticleSelector = function cmpCategoryArticleSelector() {

	// only fire for `cmpCategoryArticleSelector`
	if (componentCategoryArticleSelector) {

		var elementArticleSelectorItem = [].slice.call(document.querySelectorAll('.cmp-category-article-selector__article-selector-item')),
		    elementArticleItems = [].slice.call(document.querySelectorAll('.cmp-category-article-selector__article-list-item')),
		    currentViewArticleList = elementArticleItems,
		    elementArticleItems;

		(0, _getSelectedCategory.getSelectedCategory)(elementArticleSelectorItem, elementArticleItems);
		(0, _getAllSelectedCategory.getAllSelectedCategory)(elementArticleSelectorItem, currentViewArticleList, elementArticleItems);
		(0, _showAllSelectedCategory.showAllSelectedCategory)(currentViewArticleList);
	}
};

},{"./cmpCategoryArticleSelector/getAllSelectedCategory":7,"./cmpCategoryArticleSelector/getSelectedCategory":8,"./cmpCategoryArticleSelector/showAllSelectedCategory":9}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getAllSelectedCategory = undefined;

var _showAllSelectedCategory = require('./showAllSelectedCategory');

var elementArticleShowAll = document.querySelector("button[data-load-all]");

var getAllSelectedCategory = exports.getAllSelectedCategory = function getAllSelectedCategory(elementArticleSelectorItem, currentViewArticleList, allArticles) {

	elementArticleShowAll.addEventListener('click', function (e) {
		e.preventDefault();
		allArticles = true;
		(0, _showAllSelectedCategory.showAllSelectedCategory)(currentViewArticleList, allArticles);
	});
};

},{"./showAllSelectedCategory":9}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getSelectedCategory = undefined;

var _showSelectedCategory = require('./showSelectedCategory');

var _showAllSelectedCategory = require('./showAllSelectedCategory');

var getSelectedCategory = exports.getSelectedCategory = function getSelectedCategory(elementArticleSelectorItem, elementArticleItems) {

	var allArticles = false,
	    currentSelectedCategory,
	    currentViewArticleList;

	for (var i = 0; i < elementArticleSelectorItem.length; i++) {

		elementArticleSelectorItem[i].addEventListener('click', function (e) {
			e.preventDefault();
			currentSelectedCategory = e.currentTarget.getAttribute('data-category-type');
			currentViewArticleList = (0, _showSelectedCategory.showSelectedCategory)(currentSelectedCategory, elementArticleItems);
			(0, _showAllSelectedCategory.showAllSelectedCategory)(currentViewArticleList);
		});
	}
};

},{"./showAllSelectedCategory":9,"./showSelectedCategory":10}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var showAllSelectedCategory = exports.showAllSelectedCategory = function showAllSelectedCategory(currentViewArticleList, allArticles) {

	var elementLoadAllArticles = document.querySelector('.cmp-category-article-selector__article-load-container-button');

	if (allArticles) {
		currentViewArticleList.forEach(function (article, i) {
			article.style.display = "block";
		});
		// if (currentViewArticleList.length > 6) {
		// 	filterLoad.style.display = "none";
		// }
		elementLoadAllArticles.style.display = "none";
	} else if (!allArticles) {
		currentViewArticleList.forEach(function (article, i) {
			if (i > 5) {
				article.style.display = "none";
			}
		});
		// if (currentViewArticleList.length > 6) {
		// 	filterLoad.style.display = "block";
		// }
		elementLoadAllArticles.style.display = "block";
	}
};

},{}],10:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var showSelectedCategory = exports.showSelectedCategory = function showSelectedCategory(currentSelectedCategory, elementArticleItems) {

	if (currentSelectedCategory === 'All') {
		return elementArticleItems.map(function (elementArticleItems) {
			elementArticleItems.style.display = 'block';
			return elementArticleItems;
		});
	} else {
		return elementArticleItems.map(function (elementArticleItems) {
			elementArticleItems.style.display = 'none';

			return elementArticleItems;
		}).filter(function (elementArticleItems) {

			return elementArticleItems.getAttribute('data-category-type') === currentSelectedCategory;
		}).map(function (elementArticleItems) {

			elementArticleItems.style.display = 'block';
			return elementArticleItems;
		});
	}
};

},{}],11:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.cmpCountrySearch = undefined;

var _getUserInput = require('./cmpCountrySearch/getUserInput');

var _returnCountryList = require('./cmpCountrySearch/returnCountryList');

var _setUserInput = require('./cmpCountrySearch/setUserInput');

var componentCountrySearch = document.querySelector("[data-component-name='cmpCountrySearch']");

var cmpCountrySearch = exports.cmpCountrySearch = function cmpCountrySearch() {

	// only fire for `cmpCountrySearch`
	if (componentCountrySearch) {

		var elementSearchInput = document.querySelector("[data-component-name='cmpCountrySearch'] input[type='text']"),
		    elementSearchList = document.querySelector("[data-component-name='cmpCountrySearch'] ul"),
		    elementSearchListItem = document.querySelectorAll("[data-component-name='cmpCountrySearch'] ul li"),
		    userSelectedInput;

		elementSearchInput.addEventListener("click", function () {
			elementSearchInput.value = "";
		});

		elementSearchInput.addEventListener("keyup", function () {
			(0, _returnCountryList.returnCountryList)((0, _getUserInput.getUserInput)(elementSearchInput));
		});

		elementSearchList.addEventListener("click", function (element) {
			(0, _setUserInput.setUserInput)(elementSearchInput, elementSearchList, userSelectedInput, element);
		});
	}
};

},{"./cmpCountrySearch/getUserInput":12,"./cmpCountrySearch/returnCountryList":13,"./cmpCountrySearch/setUserInput":15}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

// import

var getUserInput = exports.getUserInput = function getUserInput(elementSearchInput) {

	var userSearchInput;

	userSearchInput = elementSearchInput.value.toLowerCase();
	return userSearchInput;
};

},{}],13:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.returnCountryList = undefined;

var _returnCountryResults = require('./returnCountryResults');

var returnCountryList = exports.returnCountryList = function returnCountryList(userSearchInput) {

	var request = new XMLHttpRequest();
	request.open('GET', 'js/api/countries.json', true);

	request.onload = function () {
		if (request.status >= 200 && request.status < 400) {
			// Success!
			var countryList = JSON.parse(request.responseText);
			(0, _returnCountryResults.returnCountryResults)(countryList, userSearchInput);
		} else {
			// We reached our target server, but it returned an error

		}
	};

	request.onerror = function () {
		// There was a connection error of some sort
	};

	request.send();
};

},{"./returnCountryResults":14}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var returnCountryResults = exports.returnCountryResults = function returnCountryResults(countryList, userSearchInput) {

	var elementSearchList = document.querySelector("[data-component-name='cmpCountrySearch'] ul"),
	    searchResultsDisplayedCurrent,
	    currentCountryToSearch,
	    currentCountryToDisplay,
	    index;

	if (userSearchInput) {
		elementSearchList.innerHTML = "";
		elementSearchList.style.display = "block";

		for (index = 0; index < countryList.length; index++) {

			var newListItem = document.createElement("li");

			currentCountryToSearch = countryList[index].toLowerCase();
			currentCountryToDisplay = countryList[index];

			if (currentCountryToSearch.match("^" + userSearchInput)) {
				newListItem.className = "cmp-country-search__results-item";
				newListItem.appendChild(document.createTextNode(currentCountryToDisplay));
				elementSearchList.appendChild(newListItem);
			}
		}
	} else {
		elementSearchList.innerHTML = "";
		elementSearchList.style.display = "none";
	}
};

},{}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var setUserInput = exports.setUserInput = function setUserInput(elementSearchInput, elementSearchList, userSelectedInput, element) {

	if (element.target && element.target.matches("li.cmp-country-search__results-item")) {
		userSelectedInput = element.target.innerText;
		elementSearchInput.value = userSelectedInput;
		elementSearchList.style.display = "none";
	}
};

},{}]},{},[1]);
