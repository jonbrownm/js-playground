(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _cmpCategoryArticleSelector = require('./components/cmpCategoryArticleSelector');

var _cmpCountrySearch = require('./components/cmpCountrySearch');

(0, _cmpCategoryArticleSelector.cmpCategoryArticleSelector)();
(0, _cmpCountrySearch.cmpCountrySearch)();

},{"./components/cmpCategoryArticleSelector":2,"./components/cmpCountrySearch":7}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.cmpCategoryArticleSelector = undefined;

var _getSelectedCategory = require('./cmpCategoryArticleSelector/getSelectedCategory');

var _getAllSelectedCategory = require('./cmpCategoryArticleSelector/getAllSelectedCategory');

var _showAllSelectedCategory = require('./cmpCategoryArticleSelector/showAllSelectedCategory');

var componentCategoryArticleSelector = document.querySelector("[data-component-name='cmpCategoryArticleSelector']");

var cmpCategoryArticleSelector = exports.cmpCategoryArticleSelector = function cmpCategoryArticleSelector() {

	var elementArticleSelectorItem = [].slice.call(document.querySelectorAll('.cmp-category-article-selector__article-selector-item')),
	    elementArticleItems = [].slice.call(document.querySelectorAll('.cmp-category-article-selector__article-list-item')),
	    currentViewArticleList = elementArticleItems,
	    elementArticleItems;

	if (componentCategoryArticleSelector) {
		(0, _getSelectedCategory.getSelectedCategory)(elementArticleSelectorItem, elementArticleItems);
		(0, _getAllSelectedCategory.getAllSelectedCategory)(elementArticleSelectorItem, currentViewArticleList, elementArticleItems);
		(0, _showAllSelectedCategory.showAllSelectedCategory)(currentViewArticleList);
	}
};

},{"./cmpCategoryArticleSelector/getAllSelectedCategory":3,"./cmpCategoryArticleSelector/getSelectedCategory":4,"./cmpCategoryArticleSelector/showAllSelectedCategory":5}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getAllSelectedCategory = undefined;

var _showAllSelectedCategory = require('./showAllSelectedCategory');

var elementArticleShowAll = document.querySelector("button[data-load-all]");

var getAllSelectedCategory = exports.getAllSelectedCategory = function getAllSelectedCategory(elementArticleSelectorItem, currentViewArticleList, allArticles) {

	elementArticleShowAll.addEventListener('click', function (e) {
		e.preventDefault();
		allArticles = true;
		(0, _showAllSelectedCategory.showAllSelectedCategory)(currentViewArticleList, allArticles);
	});
};

},{"./showAllSelectedCategory":5}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getSelectedCategory = undefined;

var _showSelectedCategory = require('./showSelectedCategory');

var _showAllSelectedCategory = require('./showAllSelectedCategory');

var getSelectedCategory = exports.getSelectedCategory = function getSelectedCategory(elementArticleSelectorItem, elementArticleItems) {

	var allArticles = false,
	    currentSelectedCategory,
	    currentViewArticleList;

	for (var i = 0; i < elementArticleSelectorItem.length; i++) {

		elementArticleSelectorItem[i].addEventListener('click', function (e) {
			e.preventDefault();
			currentSelectedCategory = e.currentTarget.getAttribute('data-category-type');
			currentViewArticleList = (0, _showSelectedCategory.showSelectedCategory)(currentSelectedCategory, elementArticleItems);
			(0, _showAllSelectedCategory.showAllSelectedCategory)(currentViewArticleList);
		});
	}
};

},{"./showAllSelectedCategory":5,"./showSelectedCategory":6}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var showAllSelectedCategory = exports.showAllSelectedCategory = function showAllSelectedCategory(currentViewArticleList, allArticles) {

	var elementLoadAllArticles = document.querySelector('.cmp-category-article-selector__article-load-container-button');

	if (allArticles) {
		currentViewArticleList.forEach(function (article, i) {
			article.style.display = "block";
		});
		// if (currentViewArticleList.length > 6) {
		// 	filterLoad.style.display = "none";
		// }
		elementLoadAllArticles.style.display = "none";
	} else if (!allArticles) {
		currentViewArticleList.forEach(function (article, i) {
			if (i > 5) {
				article.style.display = "none";
			}
		});
		// if (currentViewArticleList.length > 6) {
		// 	filterLoad.style.display = "block";
		// }
		elementLoadAllArticles.style.display = "block";
	}
};

},{}],6:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var showSelectedCategory = exports.showSelectedCategory = function showSelectedCategory(currentSelectedCategory, elementArticleItems) {

	if (currentSelectedCategory === 'All') {
		return elementArticleItems.map(function (elementArticleItems) {
			elementArticleItems.style.display = 'block';
			return elementArticleItems;
		});
	} else {
		return elementArticleItems.map(function (elementArticleItems) {
			elementArticleItems.style.display = 'none';

			return elementArticleItems;
		}).filter(function (elementArticleItems) {

			return elementArticleItems.getAttribute('data-category-type') === currentSelectedCategory;
		}).map(function (elementArticleItems) {

			elementArticleItems.style.display = 'block';
			return elementArticleItems;
		});
	}
};

},{}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.cmpCountrySearch = undefined;

var _getUserInput = require('./cmpCountrySearch/getUserInput');

var _returnCountryList = require('./cmpCountrySearch/returnCountryList');

var componentCountrySearch = document.querySelector("[data-component-name='cmpCountrySearch']");

var cmpCountrySearch = exports.cmpCountrySearch = function cmpCountrySearch() {

	var elementSearchInput = document.querySelector("[data-component-name='cmpCountrySearch'] input[type='text']");

	elementSearchInput.addEventListener('keyup', function () {

		(0, _returnCountryList.returnCountryList)((0, _getUserInput.getUserInput)(elementSearchInput));
	});
};

},{"./cmpCountrySearch/getUserInput":8,"./cmpCountrySearch/returnCountryList":9}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

// import

var getUserInput = exports.getUserInput = function getUserInput(elementSearchInput) {

	var userSearchInput;

	userSearchInput = elementSearchInput.value.toLowerCase();
	return userSearchInput;
};

},{}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.returnCountryList = undefined;

var _returnCountryResults = require('./returnCountryResults');

var returnCountryList = exports.returnCountryList = function returnCountryList(userSearchInput) {

	var request = new XMLHttpRequest();
	request.open('GET', 'js/api/countries.json', true);

	request.onload = function () {
		if (request.status >= 200 && request.status < 400) {
			// Success!
			var countryList = JSON.parse(request.responseText);
			(0, _returnCountryResults.returnCountryResults)(countryList, userSearchInput);
		} else {
			// We reached our target server, but it returned an error

		}
	};

	request.onerror = function () {
		// There was a connection error of some sort
	};

	request.send();
};

},{"./returnCountryResults":10}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var returnCountryResults = exports.returnCountryResults = function returnCountryResults(countryList, userSearchInput) {

	var currentCountry, index;

	for (index = 0; index < countryList.length; index++) {
		currentCountry = countryList[index].toLowerCase();

		if (currentCountry.match("^" + userSearchInput)) {
			console.log(currentCountry);
		}
	}
};

},{}]},{},[1]);
